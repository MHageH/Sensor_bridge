#include <mfunctions.h>
#include <stdio.h>
#include <math.h>

float m_x_position = 0;
float m_y_position = 0;
int position_lock = 0;
float sep = 0;
float Amplitude = 0.025;
int Phi = 0;

// Fixed Sensor position
float sensor_position_x = 10;
float sensor_position_y = 10;

float tangent_m_f_buffer [180] = {-57.290039,-28.636255,-19.081131,-14.300658,-11.430045,-9.514368,-8.144348,-7.115370,\
								-6.313751,-5.671280,-5.144556,-4.704631,-4.331476,-4.010781,-3.732050,-3.487414,-3.270853,\
								-3.077684,-2.904211,-2.747477,-2.605089,-2.475086,-2.355853,-2.246037,-2.144507,-2.050304,\
								-1.962610,-1.880726,-1.804048,-1.732051,-1.664280,-1.600335,-1.539865,-1.482561,-1.428148,\
								-1.376382,-1.327045,-1.279942,-1.234897,-1.191754,-1.150368,-1.110613,-1.072369,-1.035530,\
								-1.000000,-0.965689,-0.932515,-0.900404,-0.869287,-0.839100,-0.809784,-0.781286,-0.753554,\
								-0.726543,-0.700208,-0.674508,-0.649408,-0.624869,-0.600861,-0.577350,-0.554309,-0.531709,\
								-0.509525,-0.487733,-0.466308,-0.445229,-0.424475,-0.404026,-0.383864,-0.363970,-0.344328,\
								-0.324920,-0.305731,-0.286745,-0.267949,-0.249328,-0.230868,-0.212557,-0.194380,-0.176327,\
								-0.158384,-0.140541,-0.122785,-0.105104,-0.087489,-0.069927,-0.052408,-0.034921,-0.017455,\
								0.000000,0.017455,0.034921,0.052408,0.069927,0.087489,0.105104,0.122785,0.140541,0.158384,\
								0.176327,0.194380,0.212557,0.230868,0.249328,0.267949,0.286745,0.305731,0.324920,0.344328,\
								0.363970,0.383864,0.404026,0.424475,0.445229,0.466308,0.487733,0.509525,0.531709,0.554309,\
								0.577350,0.600861,0.624869,0.649408,0.674508,0.700208,0.726543,0.753554,0.781286,0.809784,\
								0.839100,0.869287,0.900404,0.932515,0.965689,1.000000,1.035530,1.072369,1.110613,1.150368,\
								1.191754,1.234897,1.279942,1.327045,1.376382,1.428148,1.482561,1.539865,1.600335,1.664280,\
								1.732051,1.804048,1.880726,1.962610,2.050304,2.144507,2.246037,2.355853,2.475086,2.605089,\
								2.747477,2.904211,3.077684,3.270853,3.487414,3.732050,4.010781,4.331476,4.704631,5.144556,\
								5.671280,6.313751,7.115370,8.144348,9.514368,11.430045,14.300658,19.081131,28.636255,57.290039};

int phase(float drone_position_x, float drone_position_y){
	float Dx = drone_position_x - sensor_position_x;
	float Dy = drone_position_y - sensor_position_y;

	//printf("Delta x = %f,", Dx);
	//printf("Delta y = %f \n", Dy);

	float conversion = 180 / M_PI;

	return (int)(atan(Dy/Dx)*conversion);
	}
float amplitude(float drone_position_x, float drone_position_y){
	float Dx = drone_position_x - sensor_position_x;
	float Dy = drone_position_y - sensor_position_y;

	float Distance = sqrt(Dx*Dx + Dy*Dy);
	printf("Distance = %f \n", Distance);
	int Dmin = 15;

	if (Distance > Dmin){
		return 0;
	} else {
		return (1/(Distance*Distance));
	}

	}
float tangent_m_f (int angle){
	if (angle < 90 && angle > -90){
		return tangent_m_f_buffer[angle + 89];
	} else {
		return 0;
	}
	}